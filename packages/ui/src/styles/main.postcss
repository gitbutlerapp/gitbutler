@import 'inter-ui/inter.css';
@import './diff.postcss';
@import './syntax-highlighting.postcss';

@tailwind base;
@tailwind components;
@tailwind utilities;

/* BOILERPLATE CSS */
a,
button {
	-webkit-user-select: none;
	-webkit-user-drag: none;
	-webkit-app-region: no-drag;
}

input,
textarea {
	outline: none;
	@apply p-1;
}

.input,
.textarea {
	@apply text-color-2 border border-light-500 bg-white p-1 dark:border-dark-400 dark:bg-dark-600;
	@apply focus:ring-2 focus:ring-purple-600;
}

/* OUTLINE REMOVAL  */
.outline-none-important {
	@apply outline-none focus:outline-none active:outline-none;
	outline: none;
}
.outline-none-important:focus {
	outline: none;
	-webkit-appearance: none;
	outline: 0;
	outline-offset: 0;
	box-shadow:
		rgb(255, 255, 255) 0px 0px 0px 0px,
		rgba(37, 99, 235, 0) 0px 0px 0px 2px,
		rgba(0, 0, 0, 0) 0px 0px 0px 0px;
}
.outline-none-important::before {
	outline: none;
	-webkit-appearance: none;
	outline: 0;
	outline-offset: 0;
	box-shadow:
		rgb(255, 255, 255) 0px 0px 0px 0px,
		rgba(37, 99, 235, 0) 0px 0px 0px 2px,
		rgba(0, 0, 0, 0) 0px 0px 0px 0px;
}

/* SCROLL BAR STYLING */
/* We style the tray scrollbar separately from the lanes for now */

.tray-scroll::-webkit-scrollbar {
	width: 0.75rem;
	height: 0.5rem;
}

.tray-scroll::-webkit-scrollbar-track {
	@apply bg-light-200 dark:bg-dark-900;
}

.tray-scroll::-webkit-scrollbar-thumb {
	@apply bg-light-200 dark:bg-dark-900;
	-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
}

.tray-scroll::-webkit-scrollbar-thumb:hover {
	@apply bg-light-500 dark:bg-dark-700;
}

.dark .tray-scroll::-webkit-scrollbar-thumb {
	-webkit-box-shadow: inset 0 0 6px rgba(255, 255255, 255, 0.2);
}

.dark .tray-scroll::-webkit-scrollbar-track {
	-webkit-box-shadow: inset 0 0 1px rgba(255, 255255, 255, 0.5);
}

.lane-scroll::-webkit-scrollbar {
	width: 0.75rem;
	height: 8px;
}

.lane-scroll::-webkit-scrollbar-track {
	@apply bg-light-200 dark:bg-dark-900;
	-webkit-box-shadow: inset 0 0 0.0625rem rgba(0, 0, 0, 0.33);
}

.lane-scroll::-webkit-scrollbar-thumb {
	-webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
	@apply bg-light-300 dark:bg-dark-800;
}

.lane-scroll::-webkit-scrollbar-thumb:hover {
	@apply bg-light-500 dark:bg-dark-700;
}
.dark .lane-scroll::-webkit-scrollbar-thumb {
	-webkit-box-shadow: inset 0 0 6px rgba(255, 255255, 255, 0.1);
}
.dark .lane-scroll::-webkit-scrollbar-track {
	-webkit-box-shadow: inset 0 0 1px rgba(255, 255255, 255, 0.3);
}

/* link */
.link {
	text-underline-offset: 3px;
}

.link:focus {
	@apply outline-none;
}

button.basic,
button.primary,
button.destructive {
	line-height: 1.25rem;
}

button.primary {
	@apply text-blue-500;
}

button.destructive {
	@apply text-red-600;
}

button.disabled {
	@apply pointer-events-none text-zinc-500;
}

button.active {
	@apply bg-light-300 dark:bg-dark-600;
}

.button.active {
	@apply bg-light-300 dark:bg-dark-600;
}

.button {
	@apply relative inline-flex w-fit items-center gap-0.5 whitespace-nowrap rounded py-2 text-base font-medium leading-5 outline-blue-200 transition-none focus:outline-2 dark:outline-blue-500;
}

.disabled {
	@apply pointer-events-none text-zinc-500;
}

.filled.disabled,
.outlined.disabled {
	@apply opacity-40;
}

.filled {
}

.filled,
.outlined {
	@apply text-light-900 dark:text-dark-100;
}

.outlined {
	@apply border;
}

.small {
	@apply h-6 py-[0.0625rem];
}

.full-width {
	@apply w-full;
}

.basic:hover {
	@apply bg-light-50 dark:bg-dark-500;
}
.link.basic:hover {
	@apply bg-transparent;
}
.basic:active {
	@apply bg-transparent no-underline;
}
.basic.outlined {
	@apply border-light-400 text-light-600 no-underline  dark:border-dark-500 dark:text-dark-200;
}
.basic.filled {
	@apply border border-light-300 bg-light-50 text-light-700 no-underline dark:border-dark-400 dark:bg-dark-700 dark:text-dark-50;
}
.basic.filled:hover {
	/* @apply bg-[#35353B]; */
}

.primary {
	@apply text-blue-500;
}
.primary:hover {
	@apply bg-[#3B82F6]/20 no-underline;
}
.primary:disabled {
	@apply text-[#BDC1CC] no-underline opacity-100;
}
.primary:active {
	@apply bg-transparent text-blue-700 underline;
}
.primary.outlined {
	@apply border-[#3662E3] no-underline;
}
.primary.outlined:hover {
	@apply bg-[#1C48C94D]/20;
}
.primary.filled {
	@apply bg-blue-600 text-light-100 no-underline;
}
.primary.filled:hover {
	@apply bg-[#1C48C9];
}

.destructive {
	@apply text-red-600 no-underline;
}
.destructive:hover {
	@apply bg-[#DC2626]/20;
}
.destructive:active {
	@apply bg-transparent text-red-400;
}
.destructive.filled {
	@apply bg-[#BF4545] text-zinc-50 no-underline;
}
.destructive.filled:disabled {
	@apply bg-[#EB2525];
}
.destructive.filled:hover {
	@apply bg-[#C91C1C];
}
.destructive.outlined {
	@apply border-[#BF4545] text-[#BF4545] no-underline;
}
.destructive.outlined:hover {
	@apply bg-[#E3363633]/20;
}

.purple {
	@apply text-[#5852A0];
}
.purple.outlined {
	@apply border-[#524C93] text-light-900 no-underline dark:text-[#524C93];
}
.purple.outlined:hover {
	@apply bg-[#524C93]/20;
}
.purple.filled {
	@apply border-b border-t border-b-[#3C386D] border-t-[#7570B1] bg-gradient-to-b from-[#5852A0] to-[#474281] text-light-50 no-underline;
}
.purple.filled:hover {
	@apply bg-[#423E7A];
}

input[type='checkbox'] {
	appearance: none;
	border: 0;
	border-radius: 0.25rem;
	display: inline-grid;
	place-content: center;
}

input[type='checkbox']::before {
	content: '';
	width: 0.625rem;
	height: 0.5rem;
	transform: scale(0);
	box-shadow: inset 1em 1em white;
}

input[type='checkbox']:checked::before {
	transform: scale(1);
	clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
	transform-origin: bottom left;
}

input[type='checkbox']:indeterminate::before {
	transform: scale(1);
	clip-path: inset(30% 7% 30% 7%);
}

/* colors */
input[type='checkbox'] {
	@apply bg-gradient-to-b from-light-200 to-light-300 dark:from-dark-400 dark:to-dark-500;
}
input[type='checkbox'].error {
	background: #fff4f4;
	border: 0.125rem solid #d82c0d;
}

input[type='checkbox']:hover {
	@apply bg-gradient-to-b from-light-300 to-light-400 dark:from-dark-300 dark:to-dark-400;
}

input[type='checkbox']:checked,
input[type='checkbox']:indeterminate {
	background: linear-gradient(180deg, #6b66aa 0%, #484383 100%);
}
input[type='checkbox'].error:checked,
input[type='checkbox'].error:indeterminate {
	background: #d82c0d;
}

input[type='checkbox']:focus {
	background: #ffffff;
	border: 0.125rem solid #58529f;
	border-radius: 0.25rem;
}
input[type='checkbox']:checked:focus,
input[type='checkbox']:indeterminate:focus {
	border: 0.125rem solid #458fff;
	background: linear-gradient(180deg, #6b66aa 0%, #484383 100%);
	border-radius: 0.25rem;
}

input[type='checkbox']:disabled {
	@apply border border-light-600 bg-gradient-to-b from-[#a0a0a0] to-[#b5b5b5] dark:border-dark-400 dark:from-[#606060] dark:to-[#757575];

	border: 0.125rem solid #d2d5d8;
}
input[type='checkbox']:checked:disabled,
input[type='checkbox']:indeterminate:disabled {
	background: #bdc1cc;
}

/* sizes */
input[type='checkbox'] {
	width: 1rem;
	height: 1rem;
}
input[type='checkbox'].large {
	width: 1.25rem;
	height: 1.25rem;
}

/**
 * Prevents elements within drop-zones from firing mouse events, making
 * it much easier to manage in/out/over/leave events since they fire less
 * frequently.
 */
.drop-zone-hover * {
	@apply pointer-events-none;
}

/* scrollbars */

.hide-native-scrollbar {
	-ms-overflow-style: none;
	scrollbar-width: none;
	overflow: scroll;
}

.hide-native-scrollbar::-webkit-scrollbar {
	/* hide scrollbar */
	display: none;
}

/* Accordion uses this */

.collapsed {
	height: 0 !important;
}

/* Themes */

:root {
	--background-1: #dddddd;
	--background-2: #eaeaeb;
	--background-3: #f4f4f5;
	--background-4: #f9f9f8;
	--background-5: #ffffff;

	--text-color-1: #333333;
	--text-color-2: #555555;
	--text-color-3: #777777;
	--text-color-4: #999999;

	--border-color-1: #949498;
	--border-color-2: #adadae;
	--border-color-3: #c4c4c7;
	--border-color-4: #e6e6e8;
	--border-color-5: #fafafa;
}

:root.dark {
	--background-1: #414141;
	--background-2: #373737;
	--background-3: #313131;
	--background-4: #1f1f1f;
	--background-5: #181818;

	--text-color-1: #ffffff;
	--text-color-2: #eeeeee;
	--text-color-3: #aaaaaa;
	--text-color-4: #888888;

	--border-color-1: #d4d4d8;
	--border-color-2: #a1a1aa;
	--border-color-3: #51515a;
	--border-color-4: #313131;
	--border-color-5: #101010;
}

@layer base {
	/* Background colors */
	.bg-color-1 {
		background-color: var(--background-1);
	}
	.bg-color-2 {
		background-color: var(--background-2);
	}
	.bg-color-3 {
		background-color: var(--background-3);
	}
	.bg-color-4 {
		background-color: var(--background-4);
	}
	.bg-color-5 {
		background-color: var(--background-5);
	}

	/* Text colors */
	.text-color-1 {
		color: var(--text-color-1);
	}
	.text-color-2 {
		color: var(--text-color-2);
	}
	.text-color-3 {
		color: var(--text-color-3);
	}
	.text-color-4 {
		color: var(--text-color-4);
	}

	/* Border colors */
	.border-color-1 {
		border-color: var(--border-color-1);
	}
	.border-color-2 {
		border-color: var(--border-color-2);
	}
	.border-color-3 {
		border-color: var(--border-color-3);
	}
	.border-color-4 {
		border-color: var(--border-color-4);
	}
	.border-color-5 {
		border-color: var(--border-color-5);
	}
}

/**
 * When using native drag & drop :hover events do not work, and per-component styles
 * are processed independently by svelte/postcss, so we don't have access to the colors
 * from there.
 */
.new-dz-hover .new-dz-marker {
	@apply border-color-2 text-color-2;
}
.lane-dz-hover .lane-dz-marker {
	@apply text-color-3 outline-light-600;
}
