@layer reset;

@import './reset.css';
@import 'inter-ui/inter.css';
@import './fonts.css';
@import './diff.css';
@import './syntax-highlighting.css';
@import './tokens.css';
@import './text-classes.css';
@import './card.css';
@import './tooltip.css';
@import './text-input.css';
@import './markdown.css';

/* CSS VARIABLES */
:root {
	--transition-fast: 0.06s ease-in-out;
	--transition-medium: 0.15s ease-in-out;
	--transition-slow: 0.2s ease-in-out;

	/* Hover ratio for oklch */
	--hover-state-ratio: calc(l - 0.03);
	--active-state-ratio: calc(l - 0.1);

	/* Z-index */
	--z-ground: 1;
	--z-lifted: 2;
	--z-floating: 3;
	--z-tooltip: 4;
	--z-blocker: 10;

	--ghost-bg-muted-1: oklch(from var(--clr-core-ntrl-50) l c h / 0.1);
	--ghost-bg-muted-2: oklch(from var(--clr-core-ntrl-50) l c h / 0.2);

	/* TODO: add focus color */
	--focus-color: var(--clr-scale-pop-50);
	--resizer-color: var(--clr-scale-pop-50);
}

:root.dark {
	--hover-state-ratio: calc(l + 0.03);
	--active-state-ratio: calc(l + 0.1);
}

/* scrollbar helpers */
.hide-native-scrollbar {
	-ms-overflow-style: none;
	scrollbar-width: none;

	&::-webkit-scrollbar {
		display: none;
	}
}

.truncate {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/* custom scrollbar */
.scrollbar,
pre {
	&::-webkit-scrollbar {
		background-color: transaparent;
		width: var(--size-14);
	}

	&::-webkit-scrollbar-track {
		background-color: transaparent;
	}

	&::-webkit-scrollbar-thumb {
		background-color: var(--clr-border-1);
		background-clip: padding-box;
		border-radius: var(--size-12);
		border: var(--size-4) solid rgba(0, 0, 0, 0);
		opacity: 0.3;
	}

	&::-webkit-scrollbar-thumb:hover {
		opacity: 0.8;
	}

	&::-webkit-scrollbar-button {
		display: none;
	}
}

.link {
	text-decoration: underline;

	&:hover {
		text-decoration: none;
	}
}

/**
 * Prevents elements within drop-zones from firing mouse events, making
 * it much easier to manage in/out/over/leave events since they fire less
 * frequently.
 */
.drop-zone-hover * {
	pointer-events: none;
}

/* FOCUS STATE */

.focus-state {
	&:focus-within {
		outline: 1px solid transaparent;
		animation: focus-animation var(--transition-fast) forwards;
	}
}

@keyframes focus-animation {
	0% {
		outline-offset: 0;
	}
	100% {
		outline-offset: 2px;
		outline: 1px solid var(--focus-color);
	}
}

/* CODE */
.code-string {
	font-family: 'Spline Sans Mono', monospace;
	border-radius: var(--radius-s);
	background: oklch(from var(--clr-scale-ntrl-50) l c h / 0.2);
	padding: var(--size-2) var(--size-4);
}

/* DIALOG STYLES */

dialog[open] {
	animation: dialog-zoom 0.25s cubic-bezier(0.34, 1.35, 0.7, 1);
}

@keyframes dialog-zoom {
	from {
		transform: scale(0.95);
	}
	to {
		transform: scale(1);
	}
}

dialog::backdrop {
	background-color: rgba(214, 214, 214, 0.4);
}

dialog[open]::backdrop {
	animation: dialog-fade 0.2s ease-out;
}

@keyframes dialog-fade {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

.dark dialog::backdrop {
	background-color: rgba(0, 0, 0, 0.35);
}

/* TRANSITION ANIMATION */

.transition-fly {
	animation: transition-fly 0.25s forwards ease-in-out;
}

@keyframes transition-fly {
	0% {
		transform: translateY(var(--size-6));
		opacity: 0;
	}
	100% {
		transform: translateY(0);
		opacity: 1;
	}
}

/* STATES */

.wiggle {
	animation: wiggle-animation 0.35s forwards;
}

@keyframes wiggle-animation {
	0% {
		transform: translateX(-3px);
	}
	25% {
		transform: translateX(3px);
	}
	50% {
		transform: translateX(-2px);
	}
	75% {
		transform: translateX(2px);
	}
	100% {
		transform: translateX(0);
	}
}

.locked-file-animation {
	--locked-color: oklch(from var(--clr-scale-warn-50) l c h / 0.2);
	border: 1px solid var(--clr-bg-1);
	animation: locked-file-animation 1.4s ease-out forwards;
}

@keyframes locked-file-animation {
	0% {
		transform: translateX(-3px);
		background-color: var(--clr-bg-1);
	}
	10% {
		transform: translateX(3px);
		background-color: var(--locked-color);
	}
	15% {
		transform: translateX(-3px);
	}
	25% {
		transform: translateX(3px);
		background-color: var(--locked-color);
	}
	30%,
	70% {
		transform: translateX(0);
	}
	100% {
		background-color: var(--clr-bg-1);
	}
}
